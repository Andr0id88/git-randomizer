name: Go Build Matrix

on:
  push:        { branches: [ "**" ] }
  pull_request: { branches: [ "**" ] }

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            arch: amd64
          - goos: linux
            arch: arm64
          - goos: darwin
            arch: amd64
          - goos: darwin
            arch: arm64
          - goos: windows
            arch: amd64

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version: "1.22"

    - name: Cache modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-go-

    # ---------- Vet & unit tests (host arch) ----------
    - name: Vet & Test
      run: |
        go vet ./...
        go test ./... || true     # delete '|| true' once you add tests

    # ---------- Cross-compile & zip ----------
    - name: Build gitr (${{ matrix.goos }}-${{ matrix.arch }})
      id: build-binary
      env:
        GOOS:   ${{ matrix.goos }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0
      run: |
        set -euo pipefail
        EXT=""
        if [ "${GOOS}" = "windows" ]; then EXT=".exe"; fi

        echo "ðŸ”§ building for $GOOS/$GOARCH"
        go build -v -o gitr${EXT} .

        ZIP_NAME="gitr-${GOOS}-${GOARCH}.zip"
        zip -9 -q $ZIP_NAME gitr${EXT}
        echo "zip_name=$ZIP_NAME" >> "$GITHUB_OUTPUT"

    # ---------- Upload only if build step succeeded ----------
    - name: Upload artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build-binary.outputs.zip_name }}
        path: ${{ steps.build-binary.outputs.zip_name }}
        if-no-files-found: error

