name: Go Build Matrix

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux   arch: amd64
          - goos: linux   arch: arm64
          - goos: darwin  arch: amd64
          - goos: darwin  arch: arm64
          - goos: windows arch: amd64

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.22"

    # cache per OS/arch
    - name: Cache modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: go-${{ runner.os }}-${{ matrix.arch }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          go-${{ runner.os }}-${{ matrix.arch }}-

    - name: Vet & Test
      run: |
        go vet ./...
        go test ./... || true   # remove '|| true' once you add tests

    - name: Build (${{ matrix.goos }}-${{ matrix.arch }})
      id: build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0
      run: |
        set -euo pipefail
        EXT=""
        if [ "${GOOS}" = "windows" ]; then EXT=".exe"; fi
        go build -v -o gitr${EXT} .
        ZIP="gitr-${GOOS}-${GOARCH}.zip"
        zip -9 -q "$ZIP" gitr${EXT}
        echo "zip=$ZIP" >> "$GITHUB_OUTPUT"

    - name: Upload artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build.outputs.zip }}
        path: ${{ steps.build.outputs.zip }}
        if-no-files-found: error

