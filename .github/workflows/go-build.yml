name: Go Build Matrix

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            arch: amd64
          - goos: linux
            arch: arm64
          - goos: darwin
            arch: amd64
          - goos: darwin
            arch: arm64
          - goos: windows
            arch: amd64

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.22"

    - name: Cache modules
      uses: actions/cache@v3
      with:
        path: |
          ${HOME}/go/pkg/mod/${{ matrix.goos }}-${{ matrix.arch }}
          ${HOME}/.cache/go-build/${{ matrix.goos }}-${{ matrix.arch }}
        key: go-${{ matrix.goos }}-${{ matrix.arch }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          go-${{ matrix.goos }}-${{ matrix.arch }}-

    - name: Vet & Test
      run: |
        go vet ./...
        go test ./... || true   # remove '|| true' once you add tests

    - name: Build (${{ matrix.goos }}-${{ matrix.arch }})
      id: build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0
        GOMODCACHE: ${HOME}/go/pkg/mod/${{ matrix.goos }}-${{ matrix.arch }}
        GOCACHE:    ${HOME}/.cache/go-build/${{ matrix.goos }}-${{ matrix.arch }}
      run: |
        set -euo pipefail
        EXT=""
        if [ "$GOOS" = "windows" ]; then EXT=".exe"; fi
        OUT="gitr${EXT}"
        go build -v -o "$OUT" .
        DESTDIR="dist/${GOOS}-${GOARCH}"
        mkdir -p "$DESTDIR"
        mv "$OUT" "$DESTDIR/$OUT"
        echo "dir=$DESTDIR" >> "$GITHUB_OUTPUT"

    - name: Upload artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: gitr-${{ matrix.goos }}-${{ matrix.arch }}
        path: ${{ steps.build.outputs.dir }}
        if-no-files-found: error

