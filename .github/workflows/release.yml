name: Publish Release

on:
  push:
    tags: ["v*.*.*"]          # e.g. v1.2.3

permissions:
  contents: write
  id-token: write

concurrency:
  group: release
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            arch: amd64
          - goos: linux
            arch: arm64
          - goos: darwin
            arch: amd64
          - goos: darwin
            arch: arm64
          - goos: windows
            arch: amd64

    steps:
    - uses: actions/checkout@v4
      with: { fetch-depth: 0 }

    - uses: actions/setup-go@v5
      with: { go-version: "1.22" }

    # -------- per-arch cache (absolute path!) --------
    - name: Cache Go
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/.gitr-cache/${{ matrix.goos }}-${{ matrix.arch }}
        key: rel-${{ matrix.goos }}-${{ matrix.arch }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          rel-${{ matrix.goos }}-${{ matrix.arch }}-

    # -------- build --------
    - name: Build (${{ matrix.goos }}-${{ matrix.arch }})
      id: build
      env:
        GOOS:   ${{ matrix.goos }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0
      run: |
        set -euo pipefail

        CACHE_ROOT="${GITHUB_WORKSPACE}/.gitr-cache/${GOOS}-${GOARCH}"
        export GOMODCACHE="${CACHE_ROOT}/gomod"
        export GOCACHE="${CACHE_ROOT}/gocache"
        mkdir -p "$GOMODCACHE" "$GOCACHE"

        EXT=""
        if [ "$GOOS" = "windows" ]; then EXT=".exe"; fi
        BIN="gitr${EXT}"

        mkdir -p dist
        go build -v -o "dist/$BIN" .
        ( cd dist && sha256sum "$BIN" >> checksums.txt )

        echo "asset=dist/$BIN"       >> "$GITHUB_OUTPUT"
        echo "ck=dist/checksums.txt" >> "$GITHUB_OUTPUT"

    - name: Upload binary
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ steps.build.outputs.asset }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # -------- merge checksums once --------
  checksums:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with: { path: all }
    - name: Merge checksums
      run: cat all/**/checksums.txt > checksums.txt
    - name: Upload checksums
      uses: softprops/action-gh-release@v2
      with: { files: checksums.txt }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

