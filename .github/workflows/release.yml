name: Publish Release

on:
  push:
    tags:
      - "v*.*.*"          # pushes like v1.2.3 trigger

permissions:
  contents: write
  id-token: write        # future-proof

concurrency:
  group: release
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - goos: linux
            arch: amd64
          - goos: linux
            arch: arm64
          - goos: darwin
            arch: amd64
          - goos: darwin
            arch: arm64
          - goos: windows
            arch: amd64

    steps:
    # 1. grab code at the tag
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0         # changelog needs history

    # 2. Go tool-chain
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: "1.22"

    # 3. per-arch cache
    - name: Cache Go
      uses: actions/cache@v3
      with:
        path: |
          ${HOME}/.cache/gitr/${{ matrix.goos }}-${{ matrix.arch }}
        key: release-${{ matrix.goos }}-${{ matrix.arch }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          release-${{ matrix.goos }}-${{ matrix.arch }}-

    # 4. build
    - name: Build (${{ matrix.goos }}-${{ matrix.arch }})
      id: build
      env:
        GOOS:   ${{ matrix.goos }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0
        GOMODCACHE: ${HOME}/.cache/gitr/${{ matrix.goos }}-${{ matrix.arch }}/gomod
        GOCACHE:    ${HOME}/.cache/gitr/${{ matrix.goos }}-${{ matrix.arch }}/gocache
      run: |
        set -euo pipefail
        EXT=""
        if [ "$GOOS" = "windows" ]; then EXT=".exe"; fi

        mkdir -p dist
        BIN="gitr${EXT}"
        OUT="dist/$BIN"

        go build -v -o "$OUT" .
        ( cd dist && sha256sum "$BIN" >> checksums.txt )

        echo "asset=$OUT"   >> "$GITHUB_OUTPUT"
        echo "checksum=dist/checksums.txt" >> "$GITHUB_OUTPUT"

    # 5. upload binary to the tag release
    - name: Upload binary
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ steps.build.outputs.asset }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ------------- merge checksums once all arch jobs finish -------------
  checksums:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: all
    - name: Merge checksums
      run: |
        cat all/**/checksums.txt > checksums.txt
    - name: Upload checksums
      uses: softprops/action-gh-release@v2
      with:
        files: checksums.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

